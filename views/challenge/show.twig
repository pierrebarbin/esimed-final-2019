{% extends "../layouts/app.twig" %}

{% block title %}Défis - Détails{% endblock %}

{% block body %}
    {{ parent() }}

    <h5><b>{{challenge.user_pseudo}}</b></h5>
    <div class="divider"></div>

    <button class="btn-small waves-effect waves-light challenge-like {{ challenge.is_liked > 0 ? 'cyan' : 'black' }}" data-id="{{ challenge.id }}">
        <span class="valign-wrapper">
            <i class="material-icons  white-text">thumb_up</i>
            <span class="amount-like white-text m-l-5">{{ challenge.amount_like }}</span>
        </span>
    </button>

    <div class="m-t-20">
        <p>{{ challenge.content }}</p>
    </div>

    <div class="divider"></div>

    <div class="w-100">
        <h6 class="d-inline-block"><b>Commentaires</b></h6>
        <a href="#create" class="waves-effect waves-light right m-t-10 m-r-10 modal-trigger" title="Ajouter un commentaire"><i class="material-icons small">add_comment</i></a>
    </div>
    <div class="clearfix"></div>
     <ul class="collection">
        {% for comment in comments %}
            <li class="collection-item avatar">
                <i class="material-icons circle">person</i>
                <span class="title">{{ comment.user_pseudo }}</span>
                <small class="grey-text">{{ comment.created_at }}</small>
                <p>
                    {{ comment.content }}
                </p>
                {% if user.id == comment.user_id %}
                    <a href="{{ url }}/challenge/{{ challenge.id }}/comment/edit/{{ comment.id }}" class="secondary-content" data-content=""><i class="material-icons">edit</i></a>
                {% endif %}
                <div class="m-t-10">
                    {% if comment.type_media == 'image' %}
                        <img class="responsive-img" src="{{ comment.media }}">
                    {% elseif comment.type_media == 'video' %}
                        <video class="responsive-video" controls>
                            <source src="{{ comment.media }}" type="video/mp4">
                        </video>
                    {% endif %}
                </div>
            </li>
        {% endfor %}
    </ul>
{% endblock %}

{% block end_html %}

    <div id="create" class="modal">
        <div class="modal-content">
            <h5 class="m-t-0">Ajouter un commentaire</h4>
            <div class="row">
                <form action="{{ url }}/challenge/{{ challenge.id }}/comment/create" method="post" class="col s12" encType="multipart/form-data">
                    <div class="row">
                        <div class="input-field col s12">
                            <i class="material-icons prefix">comment</i>
                            <textarea id="content" name="content" class="materialize-textarea validate {{  formError.create.content is defined ? 'invalid' : '' }}" data-length="140">{{ formFields.create.content }}</textarea>
                            {% if formError.create.content is defined %}
                                <span class="helper-text" data-error="{{ formError.create.content }}"></span>
                            {% endif %}
                            <label for="content">Contenu</label>
                        </div>
                        <div class="input-field col s12">
                            <div class="switch">
                                <label>
                                    Ajouter une preuve?
                                    <input type="checkbox" name="is_proof" value="1" {{ formFields.create.is_proof == 1 ? 'checked' : '' }}>
                                    <span class="lever"></span>
                                </label>
                            </div>
                            {% if formError.create.is_proof is defined %}
                                <small class="red-text">{{ formError.create.is_proof }}</small>
                            {% endif %}
                        </div>
                        <div class="input-field col s12 {{ formFields.create.is_proof == 1 ? 'd-block' : 'd-none' }}  d-toggle">
                            <span>Image ou vidéo</span>
                            <div class="file-field input-field">
                                <div class="btn">
                                    <span>Chercher</span>
                                    <input type="file" name="media">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" >
                                </div>
                            </div>
                            {% if formError.create.media is defined %}
                                <small class="red-text">{{ formError.create.media }}</small>
                            {% endif %}
                        </div>
                    </div>
                    <button class="btn waves-effect waves-light" type="submit">
                        Ajouter !
                        <i class="material-icons right">send</i>
                    </button>
                </form>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {

            let wordcounters = document.querySelectorAll('.materialize-textarea');
            let wordcountersInstances = M.CharacterCounter.init(wordcounters, {});

            let likes = document.querySelectorAll('.challenge-like');

            for(var i = 0; i < likes.length; i++) {
                likes[i].addEventListener('click', function() {

                    let that = this;

                    let challenge_id = that.getAttribute('data-id');

                    let amount = that.querySelector('.amount-like');

                     $.ajax({
                        method: "POST",
                        url: '{{ url }}/like',
                        data: {
                            challenge_id: challenge_id,
                        }
                    })
                    .done(function( result ) {

                        if(result.status === 'deleted'){
                            that.classList.remove('cyan');
                            that.classList.add('black');
                        }else if(result.status === 'inserted'){
                            that.classList.remove('black');
                            that.classList.add('cyan');
                        }

                        amount.innerHTML = result.quantity;
                    })
                    .fail(function( jqXHR, textStatus ) {

                        if(jqXHR === 404){
                            M.toast({html: 'Ce défi n\'existe pas.' });
                        }else{
                            M.toast({html: 'Une erreur est survenue, veuillez réessayer plus tard.' });
                        }
                    });
                });
            }

            {% if formType is defined %}
                $('#{{formType}}').modal('open');
            {% endif %}
        });

        let is_proof = document.querySelector('input[name="is_proof"]');
        let toggle = document.querySelector('.d-toggle');

        is_proof.addEventListener('click', function(){

            if (is_proof.checked) {
                toggle.classList.remove(['d-none']);
                toggle.classList.add(['d-block']);
            } else {
                toggle.classList.remove(['d-block']);
                toggle.classList.add(['d-none']);
            }
        });
    </script>

{% endblock %}