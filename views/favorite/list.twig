{% extends "../layouts/app.twig" %}

{% block title %}Favoris{% endblock %}

{% block body %}
    {{ parent() }}

    <h5>Mes favoris</h3>
    <div class="divider"></div>

    <div class="row">
        {% for challenge in favorites %}
            <div class="col s12">
                <div class="card card-challenge">
                    {% if challenge.is_realized == 1 %}
                        <div class="challenge-realized">
                            <i class="material-icons small green-text" title="Réalisé">beenhere</i>
                        </div>
                    {% endif %}
                    <a href="{{ url }}/challenge/show/{{ challenge.id }}" class="waves-effect">
                        <div class="card-content">
                                <div class="valign-wrapper">
                                    <span class="challenge-pseudo">{{ challenge.user_pseudo }}</span>
                                    <small class="grey-text right">{{ challenge.created_at }}</small>
                                </div>
                                <p>{{ challenge.content }}</p>
                        </div>
                    </a>
                    <div class="card-action valign-wrapper">
                        <div>
                            <span class="valign-wrapper">
                                <i class="material-icons challenge-like {{ challenge.is_liked > 0 ? 'secondary-text' : '' }}" data-id="{{ challenge.id }}">thumb_up</i>
                                <span class="amount-like">{{ challenge.amount_like }}</span>
                            </span>
                        </div>
                        <div>
                            <span class="valign-wrapper">
                                <i class="material-icons secondary-text challenge-fav" data-id="{{ challenge.id }}">{{ challenge.is_fav > 0 ? 'star' : 'star_border' }}</i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>

        {% endfor %}

{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {

            let likes = document.querySelectorAll('.challenge-like');

            for(var i = 0; i < likes.length; i++) {
                likes[i].addEventListener('click', function() {

                    let that = this;

                    let challenge_id = that.getAttribute('data-id');

                    let amount = that.nextElementSibling;

                     $.ajax({
                        method: "POST",
                        url: '{{ url }}/like',
                        data: {
                            challenge_id: challenge_id,
                        }
                    })
                    .done(function( result ) {

                        if(result.status === 'deleted'){
                            that.classList.remove('secondary-text');
                        }else if(result.status === 'inserted'){
                            that.classList.add('secondary-text');
                        }

                        amount.innerHTML = result.quantity;
                    })
                    .fail(function( jqXHR, textStatus ) {

                        if(jqXHR === 404){
                            M.toast({html: 'Ce défi n\'existe pas.' });
                        }else{
                            M.toast({html: 'Une erreur est survenue, veuillez réessayer plus tard.' });
                        }
                    });
                });
            }
        });

        document.addEventListener('DOMContentLoaded', function() {

            let favs = document.querySelectorAll('.challenge-fav');

            for(var i = 0; i < favs.length; i++) {
                favs[i].addEventListener('click', function() {

                    let that = this;

                    let challenge_id = that.getAttribute('data-id');

                     $.ajax({
                        method: "POST",
                        url: '{{ url }}/favorite/toggle',
                        data: {
                            challenge_id: challenge_id,
                        }
                    })
                    .done(function( result ) {

                        if(result.status === 'not_fav'){
                            that.innerHTML = 'star_border';
                            M.toast({html: 'Défi supprimé des favoris' });
                        }else if(result.status === 'fav'){
                            M.toast({html: 'Défi ajouté aux favoris' });
                            that.innerHTML = 'star';
                        }
                    })
                    .fail(function( jqXHR, textStatus ) {

                        if(jqXHR === 404){
                            M.toast({html: 'Ce défi n\'existe pas.' });
                        }else{
                            M.toast({html: 'Une erreur est survenue, veuillez réessayer plus tard.' });
                        }
                    });
                });
            }
        });
    </script>
{% endblock %}